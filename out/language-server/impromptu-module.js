"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createImpromptuServices = exports.ImpromptuModule = void 0;
const langium_1 = require("langium");
const module_1 = require("./generated/module");
const impromptu_validator_1 = require("./impromptu-validator");
const impromptu_scope_1 = require("./impromptu-scope");
/**
 * Dependency injection module that overrides Langium default services and contributes the
 * declared custom services. The Langium defaults can be partially specified to override only
 * selected services, while the custom services must be fully specified.
 */
exports.ImpromptuModule = {
    validation: {
        ImpromptuValidator: () => new impromptu_validator_1.ImpromptuValidator()
    },
    references: {
        ScopeComputation: (services) => new impromptu_scope_1.ImpromptuScopeComputation(services),
        ScopeProvider: (services) => new impromptu_scope_1.ScopeParamProvider(services)
    }
};
/**
 * Create the full set of services required by Langium.
 *
 * First inject the shared services by merging two modules:
 *  - Langium default shared services
 *  - Services generated by langium-cli
 *
 * Then inject the language-specific services by merging three modules:
 *  - Langium default language-specific services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 *
 * @param context Optional module context with the LSP connection
 * @returns An object wrapping the shared services and the language-specific services
 */
function createImpromptuServices(context) {
    const shared = (0, langium_1.inject)((0, langium_1.createDefaultSharedModule)(context), module_1.ImpromptuGeneratedSharedModule);
    const Impromptu = (0, langium_1.inject)((0, langium_1.createDefaultModule)({ shared }), module_1.ImpromptuGeneratedModule, exports.ImpromptuModule);
    shared.ServiceRegistry.register(Impromptu);
    (0, impromptu_validator_1.registerValidationChecks)(Impromptu);
    return { shared, Impromptu };
}
exports.createImpromptuServices = createImpromptuServices;
//# sourceMappingURL=impromptu-module.js.map